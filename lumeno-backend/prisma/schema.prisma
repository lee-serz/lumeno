// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz()

  email    String  @unique
  name     String?
  password String

  avatarPath        String?
  verificationToken String? @default(cuid()) @map("verification_token")
  token             String? @unique @default(cuid()) @map("token")

  rights Role[]  @default([USER])
  habits Habit[]
}

model Habit {
  id          Int          @id @default(autoincrement())
  name        String
  createdAt   DateTime     @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt   DateTime     @updatedAt @map("updated_at") @db.Timestamptz()
  description String?
  icon        String       @default("âœ…")
  color       String       @default("#fff")
  targetCount Int          @default(1)
  entries     HabitEntry[]
  userId      String
  user        User         @relation(fields: [userId], references: [id])
}

model HabitEntry {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz()
  completed Boolean  @default(false)
  count     Int?
  habit     Habit    @relation(fields: [habitId], references: [id])
  habitId   Int
}

enum Role {
  USER
  MANAGER
  ADMIN
}
